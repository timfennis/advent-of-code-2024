let input = read_file("input/2024/14.txt").trim;
// let input = "p=0,4 v=3,-3
// p=6,3 v=-1,-3
// p=10,3 v=-1,2
// p=2,0 v=2,-1
// p=0,0 v=1,3
// p=3,0 v=-2,-2
// p=7,6 v=-1,-3
// p=3,0 v=-1,-2
// p=9,3 v=2,3
// p=7,3 v=-1,2
// p=2,4 v=2,-3
// p=9,5 v=-3,-3";
// let input = "p=2,4 v=2,-3";

let width = 101;
let height = 103;
// let width = 11;
// let height = 7;

// let nb4 = [(-1, 0), (1, 0), (0, -1), (0, 1)];
// let nb5 = nb4 ++ [(0, 0)];
// let nb8 = [(x, y) for x in -1..=1, y in -1..=1, if x != 0 or y != 0];
// let nb9 = [(x, y) for x in -1..=1, y in -1..=1];

let p1, p2 = 0, 0;

let robots = [];

for line in input.lines {
	let px, py, vx, vy = line.signed_nums;
	robots.push((px, py, vx, vy));
}

fn next(robs) {
	let next = [];
	for rob in robs {
		let pos = (rob[0], rob[1]);
		let vel = (rob[2], rob[3]);

		let npos = (pos + vel);
		let npos = (npos[0] %% width, npos[1] %% height);

		next.push(npos ++ vel);
	}
	assert(robs.len == next.len);
	return next;
}
// print(robots.len);

let arrangements = %{};
for i in (1..=8053) {
	robots = next(robots);
}

let obj = %{a[0..2] for a in robots};
for r in (0..height) {
	let out = "";
	for c in (0..width) {
		if (c,r) in obj {
			out <>= "X";
		} else {
			out <>= ".";
		}
	}
	print(out);
}
// print(robots);

let q = [0,0,0,0];
for rob in robots {
	let x, y = rob[0], rob[1];
	if x in (0..50) and y in (0..51) {
		q[0] += 1;
	}
	if x in (51..101) and y in (0..51) {
		q[1] += 1;
	}
	if x in (0..50) and y in (52..103) {
		q[2] += 1;
	}
	if x in (51..101) and y in (52..103) {
		q[3] += 1;
	}
}

p1 = q.product;


// print(p1, p2);