let input = read_file("input/2024/18.txt").trim;
let data = input.lines.map(nums);

let nb4 = [(-1, 0), (1, 0), (0, -1), (0, 1)];

fn solve(i) {
	let objects = %{ (y, x) for x, y in data[0..i]};

	let width = 71;
	let height = 71;

	let queue = Deque();
	queue.push_back(((0, 0), 0));
	let seen = %{:Inf};
	seen[0, 0] = 0;

	while queue.len > 0 {
		let cur, cost = queue.pop_front;

		if cur == (70, 70) {
			return cost;
		}

		for delta in nb4 {
			let next = cur + delta;
			let next_cost = cost + 1;


			if next[0] < height and next[1] < width and next[0] >= 0 and next[1] >= 0 and next not in objects {
				if seen[next] > next_cost {
					queue.push_back((next, next_cost));
					seen[next] = next_cost;
				}
			}
		}
	}

	return None;
}

print("Part 1:", solve(1024));
let i = data.len;
while i > 1024 {
	if solve(i)	!= None {
		print("Part 2:", data[i][0] <> "," <> data[i][1]);
		break;
	}

	i -= 1;
}
